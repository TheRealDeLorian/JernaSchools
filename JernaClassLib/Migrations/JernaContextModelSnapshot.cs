// <auto-generated />
using System;
using JernaWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JernaClassLib.Migrations
{
    [DbContext(typeof(JernaContext))]
    partial class JernaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.AdminHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FulfilledDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fulfilled_date");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("notes");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("integer")
                        .HasColumnName("purchase_id");

                    b.HasKey("Id")
                        .HasName("admin_history_pkey");

                    b.HasIndex("PurchaseId");

                    b.ToTable("admin_history", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.AdminHistoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminHistoryId")
                        .HasColumnType("integer")
                        .HasColumnName("admin_history_id");

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.HasKey("Id")
                        .HasName("admin_history_item_pkey");

                    b.HasIndex("AdminHistoryId");

                    b.HasIndex("ItemId");

                    b.ToTable("admin_history_item", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.AuthCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("code");

                    b.Property<DateOnly?>("IsValidUntil")
                        .HasColumnType("date")
                        .HasColumnName("is_valid_until");

                    b.HasKey("Id")
                        .HasName("auth_code_pkey");

                    b.ToTable("auth_code", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("cart_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("integer")
                        .HasColumnName("cart_id");

                    b.Property<string>("ContactInfo")
                        .HasColumnType("text")
                        .HasColumnName("contact_info");

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("cart_item_pkey");

                    b.HasIndex("CartId");

                    b.HasIndex("ItemId");

                    b.ToTable("cart_item", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea")
                        .HasColumnName("image");

                    b.Property<bool?>("IsDigital")
                        .HasColumnType("boolean")
                        .HasColumnName("is_digital");

                    b.Property<bool?>("IsPhysical")
                        .HasColumnType("boolean")
                        .HasColumnName("is_physical");

                    b.Property<bool>("Isdisplayed")
                        .HasColumnType("boolean")
                        .HasColumnName("isdisplayed");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("item_name");

                    b.Property<byte[]>("Mediafile")
                        .HasColumnType("bytea")
                        .HasColumnName("mediafile");

                    b.Property<int>("PeriodLengthId")
                        .HasColumnType("integer")
                        .HasColumnName("period_length_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("item_pkey");

                    b.HasIndex("PeriodLengthId");

                    b.ToTable("item", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.PeriodLength", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("display_name");

                    b.Property<TimeSpan>("Timespan")
                        .HasColumnType("interval")
                        .HasColumnName("timespan");

                    b.HasKey("Id")
                        .HasName("period_length_pkey");

                    b.ToTable("period_length", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("purchase_date");

                    b.Property<double>("Taxpercent")
                        .HasColumnType("double precision")
                        .HasColumnName("taxpercent");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("purchase_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("purchase", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.PurchaseItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("integer")
                        .HasColumnName("purchase_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("purchase_item_pkey");

                    b.HasIndex("ItemId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("purchase_item", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("TagName")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("tag_name");

                    b.HasKey("Id")
                        .HasName("tag_pkey");

                    b.ToTable("tag", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.TagItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<int?>("TagId")
                        .HasColumnType("integer")
                        .HasColumnName("tag_id");

                    b.HasKey("Id")
                        .HasName("tag_item_pkey");

                    b.HasIndex("ItemId");

                    b.HasIndex("TagId");

                    b.ToTable("tag_item", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.TempCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("code");

                    b.Property<DateTime>("Createdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<int>("Userid")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("authcodes_pkey");

                    b.HasIndex("Userid");

                    b.ToTable("temp_code", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.ToolsForParentsItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<int>("SubId")
                        .HasColumnType("integer")
                        .HasColumnName("sub_id");

                    b.HasKey("Id")
                        .HasName("tools_for_parents_item_pkey");

                    b.HasIndex("ItemId");

                    b.HasIndex("SubId");

                    b.ToTable("tools_for_parents_item", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("integer")
                        .HasColumnName("purchase_id");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("money")
                        .HasColumnName("purchase_price");

                    b.HasKey("Id")
                        .HasName("transaction_pkey");

                    b.HasIndex("PurchaseId");

                    b.ToTable("transaction", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("email");

                    b.Property<bool?>("Isadmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isadmin");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("user_pkey");

                    b.HasIndex(new[] { "Email" }, "user_un")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.UserAuthCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthCodeId")
                        .HasColumnType("integer")
                        .HasColumnName("auth_code_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("user_auth_code_pkey");

                    b.HasIndex("AuthCodeId");

                    b.HasIndex("UserId");

                    b.ToTable("user_auth_code", (string)null);
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.AdminHistory", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Purchase", "Purchase")
                        .WithMany("AdminHistories")
                        .HasForeignKey("PurchaseId")
                        .HasConstraintName("admin_history_purchase_id_fkey");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.AdminHistoryItem", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.AdminHistory", "AdminHistory")
                        .WithMany("AdminHistoryItems")
                        .HasForeignKey("AdminHistoryId")
                        .HasConstraintName("admin_history_item_admin_history_id_fkey");

                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Item", "Item")
                        .WithMany("AdminHistoryItems")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("admin_history_item_item_id_fkey");

                    b.Navigation("AdminHistory");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Cart", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("cart_user_id_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.CartItem", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .HasConstraintName("cart_item_cart_id_fkey");

                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Item", "Item")
                        .WithMany("CartItems")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("cart_item_item_id_fkey");

                    b.Navigation("Cart");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Item", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.PeriodLength", "PeriodLength")
                        .WithMany("Items")
                        .HasForeignKey("PeriodLengthId")
                        .IsRequired()
                        .HasConstraintName("fk_period_length_id");

                    b.Navigation("PeriodLength");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Purchase", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.User", "User")
                        .WithMany("Purchases")
                        .HasForeignKey("UserId")
                        .HasConstraintName("purchase_user_id_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.PurchaseItem", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Item", "Item")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("purchase_item_item_id_fkey");

                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Purchase", "Purchase")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("PurchaseId")
                        .HasConstraintName("purchase_item_purchase_id_fkey");

                    b.Navigation("Item");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.TagItem", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Item", "Item")
                        .WithMany("TagItems")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("tag_item_item_id_fkey");

                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Tag", "Tag")
                        .WithMany("TagItems")
                        .HasForeignKey("TagId")
                        .HasConstraintName("tag_item_tag_id_fkey");

                    b.Navigation("Item");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.TempCode", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.User", "User")
                        .WithMany("TempCodes")
                        .HasForeignKey("Userid")
                        .IsRequired()
                        .HasConstraintName("authcodes_userid_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.ToolsForParentsItem", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Item", "Item")
                        .WithMany("ToolsForParentsItemItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("tools_for_parents_item_item_id_fkey");

                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Item", "Sub")
                        .WithMany("ToolsForParentsItemSubs")
                        .HasForeignKey("SubId")
                        .IsRequired()
                        .HasConstraintName("tools_for_parents_item_sub_id_fkey");

                    b.Navigation("Item");

                    b.Navigation("Sub");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Transaction", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.Purchase", "Purchase")
                        .WithMany("Transactions")
                        .HasForeignKey("PurchaseId")
                        .HasConstraintName("transaction_purchase_id_fkey");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.UserAuthCode", b =>
                {
                    b.HasOne("JernaClassLib.Data.DatabaseObjects.AuthCode", "AuthCode")
                        .WithMany("UserAuthCodes")
                        .HasForeignKey("AuthCodeId")
                        .HasConstraintName("user_auth_code_auth_code_id_fkey");

                    b.HasOne("JernaClassLib.Data.DatabaseObjects.User", "User")
                        .WithMany("UserAuthCodes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_auth_code_user_id_fkey");

                    b.Navigation("AuthCode");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.AdminHistory", b =>
                {
                    b.Navigation("AdminHistoryItems");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.AuthCode", b =>
                {
                    b.Navigation("UserAuthCodes");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Item", b =>
                {
                    b.Navigation("AdminHistoryItems");

                    b.Navigation("CartItems");

                    b.Navigation("PurchaseItems");

                    b.Navigation("TagItems");

                    b.Navigation("ToolsForParentsItemItems");

                    b.Navigation("ToolsForParentsItemSubs");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.PeriodLength", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Purchase", b =>
                {
                    b.Navigation("AdminHistories");

                    b.Navigation("PurchaseItems");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.Tag", b =>
                {
                    b.Navigation("TagItems");
                });

            modelBuilder.Entity("JernaClassLib.Data.DatabaseObjects.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Purchases");

                    b.Navigation("TempCodes");

                    b.Navigation("UserAuthCodes");
                });
#pragma warning restore 612, 618
        }
    }
}
